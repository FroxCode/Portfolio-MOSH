////////////////////////////////////////////////////////////
//
// Created by Dale
//
////////////////////////////////////////////////////////////
#ifndef _GRID_H_
#define _GRID_H_
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML\Graphics.hpp>
#include "Tile.h"
using namespace std;
using namespace sf;

class Grid
{
public:
	////////////////////////////////////////////////////////////
	// Default constructor
	//
	////////////////////////////////////////////////////////////
	Grid();

	////////////////////////////////////////////////////////////
	// Overloaded constructor
	//
	////////////////////////////////////////////////////////////
	Grid(int width, int height, int offsetX, int offsetY);

	////////////////////////////////////////////////////////////
	// Default destructor
	//
	////////////////////////////////////////////////////////////
	~Grid();

	////////////////////////////////////////////////////////////
	// Updates the grid
	//
	////////////////////////////////////////////////////////////
	void update(Vector2f &cursorPosition, int const PHASE);

	////////////////////////////////////////////////////////////
	// Re-initialises the grid
	//
	////////////////////////////////////////////////////////////
	void initialise(int width, int height, int offsetX, int offsetY);

	////////////////////////////////////////////////////////////
	// Draws the object
	//
	////////////////////////////////////////////////////////////
	void render(RenderWindow &window);

	std::vector<std::shared_ptr<Tile>> tiles;
	int m_width;
	int m_height;
	int m_offsetX;
	int m_offsetY;

private:
	

};
#endif

