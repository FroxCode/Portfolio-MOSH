////////////////////////////////////////////////////////////
//
//Created by Dale Sinnott
//Edited by Connor Maguire
//
////////////////////////////////////////////////////////////
#ifndef _MENU_H_
#define _MENU_H_
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML/Graphics.hpp>
#include "Overlay.h"
#include "Button.h"
#include "Label.h"
#include <vector>
#include <memory>
#include "Cursor.h"
using namespace std;
using namespace sf;

class Menu
{
public:
	////////////////////////////////////////////////////////////
	/// Overloaded constructor
	///
	////////////////////////////////////////////////////////////
	Menu(int btnAmount, std::string labelText, std::string fontTxt, std::string backgroundImg, std::string buttonImg, std::string buttonSnd, float w, float h, std::string btnText[], Vector2f position[], float charSizeBtn, float charSizeHeader);
	
	////////////////////////////////////////////////////////////
	/// Default constructor
	///
	////////////////////////////////////////////////////////////
	Menu();

	////////////////////////////////////////////////////////////
	/// Default constructor
	///
	////////////////////////////////////////////////////////////
	~Menu();

	////////////////////////////////////////////////////////////
	/// recreates the menu
	///
	////////////////////////////////////////////////////////////
	void reCreate(int btnAmount, std::string labelText, std::string fontTxt, std::string backgroundImg, std::string buttonImg, std::string buttonSnd, float w, float h, std::string btnText[], Vector2f position[], float charSizeBtn, float charSizeHeader, bool scaleButtonDown);
	
	////////////////////////////////////////////////////////////
	/// updates the menu
	///
	////////////////////////////////////////////////////////////
	void update(shared_ptr<Cursor> &cursor);

	////////////////////////////////////////////////////////////
	/// Renders the menu
	///
	////////////////////////////////////////////////////////////
	void render(RenderWindow &window);

	////////////////////////////////////////////////////////////
	/// Fades each menu into view / transition
	///
	////////////////////////////////////////////////////////////
	void fadeIn();

	////////////////////////////////////////////////////////////
	/// controller support
	///
	////////////////////////////////////////////////////////////
	void controls(shared_ptr<Cursor> &cursor); //button controls
	
	////////////////////////////////////////////////////////////
	/// Sets the sound volume
	///
	////////////////////////////////////////////////////////////
	void setSoundVolume(int vol);
	int getSoundVolume();

	////////////////////////////////////////////////////////////
	/// adjusts the sound volume
	///
	////////////////////////////////////////////////////////////
	void adjustSoundVolume(int vol);
	int m_buttonAmount;

	std::vector<std::shared_ptr<Button>> button;

	//Button button[];

private:
	
	//overlays
	Overlay m_background;
	//menu header and font
	Label m_header;

	//initial index of buttons
	//int m_indexBtn = 0;

};

#endif 