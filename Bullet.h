////////////////////////////////////////////////////////////
//
// Created by Emre
// Worked on by Dale
//
////////////////////////////////////////////////////////////
#ifndef _BULLET_H
#define _BULLET_H
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML\Graphics.hpp>
#include <memory>
using namespace std;
using namespace sf;

class Bullet{
public:
	////////////////////////////////////////////////////////////
	/// Default constructor
	///
	////////////////////////////////////////////////////////////
	Bullet();

	////////////////////////////////////////////////////////////
	/// Default destructor
	///
	////////////////////////////////////////////////////////////
	~Bullet();

	////////////////////////////////////////////////////////////
	/// Overloaded constructor
	///
	////////////////////////////////////////////////////////////
	Bullet(sf::Vector2f position, std::string const &texture);

	////////////////////////////////////////////////////////////
	/// Updates the object
	///
	////////////////////////////////////////////////////////////
	void update();

	////////////////////////////////////////////////////////////
	/// Draws the object
	///
	////////////////////////////////////////////////////////////
	void render(RenderWindow &window);

	////////////////////////////////////////////////////////////
	/// Recreates the bullet at it's starting position
	///
	////////////////////////////////////////////////////////////
	void reset(Vector2f &target, Vector2f startPos);

	Vector2f m_position;
	Vector2f m_target;
	bool is_alive = false;
	Texture m_texture;
	Sprite m_sprite;
	IntRect bounds;
	int damage = 50;
	int type;
	float distance;
	Vector2f direction;
	float velocity = 400;
	const float FPS = 1.f / 60.f;
	Vector2f startPoint;

private:

	
};
#endif