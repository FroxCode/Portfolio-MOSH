////////////////////////////////////////////////////////////
//
// Created by Dale
//
////////////////////////////////////////////////////////////
#ifndef _OVERLAY_H_
#define _OVERLAY_H_
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML/Graphics.hpp>
using namespace sf;

class Overlay
{
public:
	////////////////////////////////////////////////////////////
	/// overloaded constructor
	///
	////////////////////////////////////////////////////////////
	Overlay(std::string imageName, float w, float h, float xPer, float yPer, bool centered);


	////////////////////////////////////////////////////////////
	/// overloaded constructor
	///
	////////////////////////////////////////////////////////////
	Overlay(std::string imageName, float w, float h, float xPer, float yPer, Vector2f position);

	////////////////////////////////////////////////////////////
	/// default constructor
	///
	////////////////////////////////////////////////////////////
	Overlay();

	////////////////////////////////////////////////////////////
	/// recreates the overlay
	///
	////////////////////////////////////////////////////////////
	void reCreate(std::string imageName, float w, float h, float xPer, float yPer, bool centered);

	////////////////////////////////////////////////////////////
	/// recreates the overlay
	///
	////////////////////////////////////////////////////////////
	void reCreate(std::string imageName, Vector2f position);

	////////////////////////////////////////////////////////////
	/// recreates the overlay
	///
	////////////////////////////////////////////////////////////
	void reCreate(std::string imageName, float w, float h, float xPer, float yPer, Vector2f position);

	////////////////////////////////////////////////////////////
	/// updates the overlay
	///
	////////////////////////////////////////////////////////////
	void update();

	////////////////////////////////////////////////////////////
	/// renders the overlay
	///
	////////////////////////////////////////////////////////////
	void render(RenderWindow &window);

	////////////////////////////////////////////////////////////
	/// overlay transition
	///
	////////////////////////////////////////////////////////////
	void fadeIn();

	////////////////////////////////////////////////////////////
	/// overlay transition
	///
	////////////////////////////////////////////////////////////
	void fadeOut();

	////////////////////////////////////////////////////////////
	/// rotates the overlay
	///
	////////////////////////////////////////////////////////////
	void rotate(float angle); //rotate the image

	////////////////////////////////////////////////////////////
	/// set the origin of the overlay
	///
	////////////////////////////////////////////////////////////
	void centerOrigin(); 

	////////////////////////////////////////////////////////////
	/// sets the transparency of the overlay
	///
	////////////////////////////////////////////////////////////
	void setTransparency(int percentage);
private:
	sf::Texture background_texture;
	sf::Sprite background_sprite;
	int count;//used for fading
	int num;
};
#endif
