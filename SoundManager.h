////////////////////////////////////////////////////////////
//
// Created by Connor
// 
//
////////////////////////////////////////////////////////////
#ifndef _SOUNDMANAGER_H_
#define _SOUNDMANAGER_H_
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML\Audio.hpp>

class SoundManager{
public:
	////////////////////////////////////////////////////////////
	/// Default constructor
	///
	////////////////////////////////////////////////////////////
	SoundManager();

	////////////////////////////////////////////////////////////
	/// Default destructor
	///
	////////////////////////////////////////////////////////////
	~SoundManager();

	////////////////////////////////////////////////////////////
	/// Re-initialises the object
	///
	////////////////////////////////////////////////////////////
	void reCreate(const std::string & file, int volume);

	////////////////////////////////////////////////////////////
	/// Plays a single sound
	///
	////////////////////////////////////////////////////////////
	void playSingle();

	////////////////////////////////////////////////////////////
	/// Loops the sound
	///
	////////////////////////////////////////////////////////////
	void playLoop();

	////////////////////////////////////////////////////////////
	/// Adds or subtracts the number passed from the volume
	///
	////////////////////////////////////////////////////////////
	void adjustVolume(int vol);

	////////////////////////////////////////////////////////////
	/// Sets the volume to the number passed
	///
	////////////////////////////////////////////////////////////
	void setVolume(int vol);

	////////////////////////////////////////////////////////////
	/// Gets the current volume
	///
	////////////////////////////////////////////////////////////
	int getVolume();

	////////////////////////////////////////////////////////////
	/// Stops the sound playing
	///
	////////////////////////////////////////////////////////////
	void stopPlay();

	sf::Sound m_sound;

private:

	sf::SoundBuffer s;
	
};
#endif