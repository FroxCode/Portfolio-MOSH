////////////////////////////////////////////////////////////
//
// Created by Dale
//
////////////////////////////////////////////////////////////
#ifndef _BUTTON_H_
#define _BUTTON_H_
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML\Graphics.hpp>
#include <SFML\Audio.hpp>
#include <SFML\System.hpp>
using namespace sf;
class Button
{
public:
	////////////////////////////////////////////////////////////
	/// Overloaded constructor
	///
	////////////////////////////////////////////////////////////
	Button(std::string text, sf::Vector2f position, std::string font, std::string buttonImg, std::string buttonSnd, float width, float height, float charSize, bool scaleDown);

	////////////////////////////////////////////////////////////
	/// Default constructor
	///
	////////////////////////////////////////////////////////////
	Button();
	////////////////////////////////////////////////////////////
	/// Default destructor
	///
	////////////////////////////////////////////////////////////
	~Button();

	////////////////////////////////////////////////////////////
	/// Updates the object
	///
	////////////////////////////////////////////////////////////
	void update(); 

	////////////////////////////////////////////////////////////
	/// Draws the object
	///
	////////////////////////////////////////////////////////////
	void render(sf::RenderWindow &window);

	////////////////////////////////////////////////////////////
	/// An effect for increasing the alpha of the object
	///
	////////////////////////////////////////////////////////////
	void fadeIn(); 

	////////////////////////////////////////////////////////////
	/// An effect for lowering the alpha of the object
	///
	////////////////////////////////////////////////////////////
	void fadeOut();

	////////////////////////////////////////////////////////////
	/// Sets volume of the click sound
	///
	////////////////////////////////////////////////////////////
	void setVolume(int vol); //

	////////////////////////////////////////////////////////////
	/// Changes the volume of the click sound
	///
	////////////////////////////////////////////////////////////
	void adjustVolume(int vol); // increases/decreases the sound

	enum State { UNSELECTED, HELD, RELEASED, HIGHLIGHTED }; //button state 
	State currentState = UNSELECTED; //default to unselected
	State lastState; //last button state

	bool clicked; //if clicked
	sf::Sound clickSound; //sound effect
	IntRect getGlobalBounds();
	Vector2f getPosition();
	float getWidth();
	float getHeight();
	sf::Text m_text;
	
private:
	sf::Font m_font; 
	bool m_scaleDown;
	sf::SoundBuffer buffer; //needed to play sound effect

	sf::Texture btnTexture; //image of button
	sf::Sprite btnSprite; //the button entity

	sf::Vector2f m_position; //position
	sf::Vector2f m_position_unchanged; //the original position, needed to reset button after animation

	float m_width; //width and height of screen
	float m_height;

	int count; //counters used for fading in and out
	int num;
};
#endif
