////////////////////////////////////////////////////////////
//
// Created by Connor
// Worked on by Dale
//
////////////////////////////////////////////////////////////
#ifndef _TESLA_H_
#define _TESLA_H_
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "Turret.h"
#include "ShockBlast.h"
#include "SoundManager.h"
class Tesla : public Turret
{
public:
	////////////////////////////////////////////////////////////
	//
	// Default constructor
	//
	////////////////////////////////////////////////////////////
	Tesla();

	////////////////////////////////////////////////////////////
	//
	// Default destructor
	//
	////////////////////////////////////////////////////////////
	~Tesla();

	////////////////////////////////////////////////////////////
	//
	// Overloaded constructor
	//
	////////////////////////////////////////////////////////////
	Tesla(sf::Vector2f position, string const &texture, int radius);

	////////////////////////////////////////////////////////////
	//
	// Sets the tesla position 
	//
	////////////////////////////////////////////////////////////
	void setPosition(Vector2f pos);

	////////////////////////////////////////////////////////////
	//
	// Updates the object
	//
	////////////////////////////////////////////////////////////
	void update();

	////////////////////////////////////////////////////////////
	//
	// Changes the level of the tesla
	//
	////////////////////////////////////////////////////////////
	void upgrade(int num);

	////////////////////////////////////////////////////////////
	//
	// targets the nearest enemy based that isnt slowed
	//
	////////////////////////////////////////////////////////////
	void targetEnemy(shared_ptr<Enemy> enemy);

	int slow = 1;
	void fire(Vector2f & target);
	vector<shared_ptr<Bullet>> getBullets();
	
private:
	SoundManager fired;
	vector<shared_ptr<ShockBlast>> ammunition;

};

#endif